######

grayFrame1=rgb2gray(imread('Assignment2_Pair1_Image1.jpg'));
grayFrame2=rgb2gray(imread('Assignment2_Pair1_Image2 (1).jpg'));

points = detectSURFFeatures(grayFrame1);
[features,points] = extractFeatures(grayFrame1,points);


idx = 1;

    
    idx = idx + 1;
    
    pointsPrev = points;
    featuresPrev = features;
    

    points = detectSURFFeatures(grayFrame2);
    

    [features,points] = extractFeatures(grayFrame2,points);
    

    indexPairs = matchFeatures(features,featuresPrev);
    matchedPoints = points(indexPairs(:,1),:);
    matchedPointsPrev = pointsPrev(indexPairs(:,2),:);
   
    tforms(idx) = estimateGeometricTransform...
        (matchedPoints,matchedPointsPrev,'projective');
    
    tforms(idx).T = tforms(idx-1).T * tforms(idx).T;
            

imgSize = size(grayFrame2);
xMin = 1;
xMax = imgSize(2);
yMin = 1;
yMax = imgSize(1);

for idx = 1:numel(tforms)
    
    [xLimit,yLimit] = outputLimits(tforms(idx),...
        [1 imgSize(2)], [1 imgSize(1)]);
    xMin = min(xMin,xLimit(1));
    xMax = max(xMax,xLimit(2));
    yMin = min(yMin,yLimit(1));
    yMax = max(yMax,yLimit(2));
    
end


width = round(xMax - xMin);
height = round(yMax - yMin);

hBlender = vision.AlphaBlender('Operation','Binary mask',...
    'MaskSource','Input port');

xLimits = [xMin xMax];
yLimits = [yMin yMax];
panoramaView = imref2d([height width],xLimits,yLimits);

panorama = zeros([height width],'single');
idx = 1;


warpedImage = imwarp(grayFrame1,tforms(idx),'OutputView',panoramaView);
warpedMask = warpedImage > 0;
figure(2)
imshow(warpedImage)
panorama = step(hBlender,panorama,im2single(warpedImage),warpedMask);
    idx = idx + 1;

warpedImage = imwarp(grayFrame2,tforms(idx),'OutputView',panoramaView);
warpedMask = warpedImage > 0;
figure(3)
imshow(warpedImage)
panorama = step(hBlender,panorama,im2single(warpedImage),warpedMask);

figure(1)
imshow(panorama)

idx = idx + 1;

